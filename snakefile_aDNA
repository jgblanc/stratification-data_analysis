# Snakefile to run HGDP (full data) / UKBB  data analysis
DATASET=["le"]
GWAS=["ALL", "WBS"]
CHR =[]
for i in range(1, 23):
  CHR.append(str(i))
CONTRASTS = ["EUROPEAN_NEOLITHIC", "BRONZE_AGE", "HISTORICAL"]
#PC = [40]
#COVAR=["FGr-LOCO", "control"]

def get_params(x):
  out = x.split("_")[1]
  return out

rule all:
    input:
        expand("data/hgdp/le/{gwas}/variants/overlappingSNPs_chr{chr}.txt" , chr=CHR, gwas=GWAS, dataset=DATASET, contrasts=CONTRASTS)


## Get overlapping set of final SNPS for differenet datasets

rule get_overlapping_snps:
    input:
        adna="data/adna/le/all_populations_mles.txt",
	      freq_ukbb="data/ukbb/{gwas}/variants/ukb_imp_chr{chr}_v3.afreq"
    output:
        "data/hgdp/le/{gwas}/variants/overlappingSNPs_chr{chr}.txt"
    shell:
        """
        Rscript code/adna/overlapping_snps.R {input.freq_ukbb} {input.adna} {output} {wildcards.chr}
        """

rule flip_all_snps:
    input:
        freq_ukbb_wbs="data/ukbb/WBS/variants/ukb_imp_chr{chr}_v3.afreq",
        freq_ukbb_all="data/ukbb/ALL/variants/ukb_imp_chr{chr}_v3.afreq",
	      sds="data/adna/le/all_populations_mles.txt"
    output:
        rvec=expand("data/adna/le/r/{contrasts}_chr{{chr}}.rvec", contrasts = CONTRASTS)
    params:
        out_path= "data/adna/le/r/"
    shell:
        """
        Rscript code/adna/flip_overlapping_snps.R {input.freq_ukbb_wbs} {input.freq_ukbb_all} {input.sds} {params.out_path} {wildcards.chr}
        """





# Snakefile to run full data analysis with any set of constrasts
CHR =[]
for i in range(1, 23):
  CHR.append(str(i))
DATASET = ["split"]
SUBDATASET = ["awbs-small"]
CONTRASTS = ["afr-wbs"]
GWAS=["afr-wbs-small"]
CHRTYPE_GWAS = ["chr-even", "chr-odd", "chr-all"]
CHRTYPE_TEST = ["test-even", "test-odd", "test-all"]

rule all:
    input:
        expand("/scratch/jgblanc/stratification-data_analysis/data/{dataset}/{subdataset}/dosages/dosages_{chr}.traw", chr=CHR, dataset = DATASET, subdataset=SUBDATASET, contrasts=CONTRASTS, gwas=GWAS, chrtype_gwas=CHRTYPE_GWAS, chrtype_test=CHRTYPE_TEST)

# Sample individuals for panels

rule get_ID_lists:
    input:
        sex="data/phenotypes/genetic_sex_22001.txt",
        batch="data/phenotypes/genotype_measurement_batch_22000.txt",
        age="data/phenotypes/age_at_recruitment_21022.txt",
        genotyped="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr22_v3.psam",
        phenotyped = "data/phenotypes/StandingHeight_50.txt",
        wbs="data/ukbb/WBS.ids",
        african="data/ukbb/african.ids",
        withdraw = "data/ukbb/withdraw69046_241_20240328.txt"
    output:
        gwas="data/{dataset}/{subdataset}/ids/gwas.ids",
        test="data/{dataset}/{subdataset}/ids/test.ids"
    shell:
        """
        Rscript code/split/get_IDs.R {input.sex} {input.batch} {input.age} {input.genotyped} {output.gwas} {output.test} {input.wbs} {input.african} {input.phenotyped} {input.withdraw}
        """

# Get allele frequencies

rule get_AF:
    input:
        gwas="data/{dataset}/{subdataset}/ids/gwas.ids",
        test="data/{dataset}/{subdataset}/ids/test.ids"
    output:
        gwas="data/{dataset}/{subdataset}/variantFreq/gwas_{chr}.afreq",
        test="data/{dataset}/{subdataset}/variantFreq/test_{chr}.afreq"
    params:
        prefix_in="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
        prefix_out_gwas="data/{dataset}/{subdataset}/variantFreq/gwas_{chr}",
        prefix_out_test="data/{dataset}/{subdataset}/variantFreq/test_{chr}"
    resources:
        mem_mb=38000,
        time="00:30:00"
    shell:
        """
        plink2 --pfile {params.prefix_in} \
        --freq \
        --keep {input.gwas} \
	      --threads 8 \
        --memory 38000 \
        --out {params.prefix_out_gwas}

        plink2 --pfile {params.prefix_in} \
        --freq \
        --keep {input.test} \
	      --threads 8 \
        --memory 38000 \
        --out {params.prefix_out_test}
        """

# Get overlapping SNPs

rule get_overlapping_snps:
    input:
        freq_test="data/{dataset}/{subdataset}/variantFreq/test_{chr}.afreq",
	      freq_gwas="data/{dataset}/{subdataset}/variantFreq/gwas_{chr}.afreq"
    output:
        "data/{dataset}/{subdataset}/variants/overlappingSNPs_chr{chr}.txt"
    shell:
        """
        Rscript code/hgdp/overlapping_snps.R {input.freq_gwas} {input.freq_test} {output}
        """

# Get allele freqeuncy contrasts

rule get_popAF:
    input:
        test="data/{dataset}/{subdataset}/ids/test.ids",
        snps="data/{dataset}/{subdataset}/variants/overlappingSNPs_chr{chr}.txt"
    output:
        "data/{dataset}/{subdataset}/popAF/popAF_{chr}.AFR.afreq",
	"data/{dataset}/{subdataset}/popAF/popAF_{chr}.WBS.afreq"
    params:
        prefix_in="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
        prefix_out="data/{dataset}/{subdataset}/popAF/popAF_{chr}"
    resources:
        mem_mb=38000,
        time="00:30:00"
    shell:
        """
        plink2 --pfile {params.prefix_in} \
	--extract {input.snps} \
        --keep {input.test} \
	--freq \
        --within {input.test} POP \
	--loop-cats POP \
	--threads 8 \
        --memory 38000 \
        --out {params.prefix_out}
        """

# Compute r vectors

rule compute_r:
    input:
        afr="data/{dataset}/{subdataset}/popAF/popAF_{chr}.AFR.afreq",
	      wbs="data/{dataset}/{subdataset}/popAF/popAF_{chr}.WBS.afreq"
    output:
        rvec="data/{dataset}/{subdataset}/r/afr-wbs_chr{chr}.rvec"
    shell:
        """
        Rscript code/split/compute_afr-wbs_r.R {input.afr} {input.wbs} {output.rvec}
        """


# Get sample variance of GWAS panel genotypes

rule get_dosage_file:
    input:
        gwas="data/{dataset}/{subdataset}/ids/gwas.ids",
        snps="data/{dataset}/{subdataset}/variants/overlappingSNPs_chr{chr}.txt",
        gp_genos="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen"
    output:
        "/scratch/jgblanc/stratification-data_analysis/data/{dataset}/{subdataset}/dosages/dosages_{chr}.traw"
    params:
        prefix_in="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
        prefix_out="/scratch/jgblanc/stratification-data_analysis/data/{dataset}/{subdataset}/dosages/dosages_{chr}"
    resources:
        mem_mb=38000,
        time="00:30:00"
    shell:
        """
        plink2 --pfile {params.prefix_in} \
        --extract {input.snps} \
        --keep {input.gwas} \
        --recode A-transpose \
	      --threads 8 \
        --memory 38000 \
        --out {params.prefix_out}
        """



# Computer FGr per block

rule standardize_r:
    input:
        r=expand("data/{{dataset}}/{{subdataset}}/r/{{contrasts}}_chr{chr}.rvec", chr=CHR),
        gp_genos=expand("/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen", chr=CHR),
        overlap_snps=expand("data/{{dataset}}/{{subdataset}}/variants/overlappingSNPs_chr{chr}.txt", chr=CHR),
        ids = "data/{dataset}/{subdataset}/ids/gwas.ids",
        ldBlock="data/LD_blocks/fourier_ls-all_parsed.bed"
    output:
        r="data/{dataset}/{subdataset}/r/{contrasts}_all_standardized.rvec"
    threads: 16
    resources:
        mem_mb=38000,
	time="06:00:00"
    params:
        gp_prefix = "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr",
        out_prefix = "data/{dataset}/{subdataset}/r/{contrasts}",
        r_prefix = "data/{dataset}/{subdataset}/r/{contrasts}_chr",
        snp_prefix = "data/{dataset}/{subdataset}/variants/overlappingSNPs_chr"
    shell:
        """
        Rscript code/calculate_FGr/stardardize_r_IDs.R {params.gp_prefix} {params.out_prefix} {params.r_prefix} {params.snp_prefix} {output.r} {input.ids} {input.ldBlock}
        """


rule compute_FGr_block:
    input:
        r="data/{dataset}/{subdataset}/r/{contrasts}_chr{chr}.rvec",
        gp_genos="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen",
        overlap_snps="data/{dataset}/{subdataset}/variants/overlappingSNPs_chr{chr}.txt",
        ldBlocks="data/LD_blocks/fourier_ls-all_parsed.bed",
	ids = "data/{dataset}/{subdataset}/ids/gwas.ids"
    output:
        FGr="output/calculate_FGr/{dataset}/{subdataset}/blocks/FGr_{contrasts}_{chr}.txt",
        snps="output/calculate_FGr/{dataset}/{subdataset}/blocks/{contrasts}_{chr}_SNPcount.txt",
    threads: 16
    resources:
        mem_mb=38000,
	time="06:00:00"
    params:
        gp_prefix = "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
        out_prefix = "output/calculate_FGr/{dataset}/{subdataset}/blocks/{contrasts}_{chr}",
    shell:
        """
        Rscript code/calculate_FGr/calc_FGr_block_IDs.R {params.gp_prefix} {params.out_prefix} {input.r} {input.overlap_snps} {input.ldBlocks} {output.FGr} {output.snps} {input.ids}
        """

# Find block jacknife error in FGr

rule compute_FGr_error:
    input:
        FGr = expand("output/calculate_FGr/{{dataset}}/{{subdataset}}/blocks/FGr_{{contrasts}}_{chr}.txt", chr = CHR),
        SNP_Counts = expand("output/calculate_FGr/{{dataset}}/{{subdataset}}/blocks/{{contrasts}}_{chr}_SNPcount.txt", chr=CHR)
    output:
      "output/calculate_FGr/{dataset}/{subdataset}/blocks/Var_{contrasts}.txt"
    threads: 16
    resources:
        mem_mb=100000,
        time="24:00:00"
    params:
      prefix_in = "output/calculate_FGr/{dataset}/{subdataset}/blocks/FGr_{contrasts}",
      SNP_prefix = "output/calculate_FGr/{dataset}/{subdataset}/blocks/{contrasts}"
    shell:
      """
      Rscript code/calculate_FGr/compute_error_jacknife_blocks.R {params.prefix_in} {output} {params.SNP_prefix}
      """

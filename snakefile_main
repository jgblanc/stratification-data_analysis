# Snakefile to run full data analysis with any set of constrasts
CHR =[]
for i in range(1, 23):
  CHR.append(str(i))
ROOT = ["/gpfs/data/berg-lab/jgblanc/stratification-data_analysis"]
DATASET = ["hgdp"]
SUBDATASET = ["EUR"]
TMP = [f.split(".")[0] for f in os.listdir("data/hgdp/r/EUR/") if f.endswith('_chr9.rvec')]
#CONTRASTS = [s.rstrip("_chr9") for s in TMP]
CONTRASTS = ["French-Sardinian"]


def get_chr_num(x):
  out = int(x)
  return out


rule all:
    input:
        expand("{root}/output/run_GWAS/covars/fixed.txt", root=ROOT, chr=CHR, dataset = DATASET, subdataset=SUBDATASET, contrasts=CONTRASTS)


## Compute FGr

rule compute_FGr_chr:
    input:
        r="{root}/data/{dataset}/r/{subdataset}/{contrasts}_chr{chr}.rvec",
        gp_genos="/scratch/jgblanc/ukbb/plink2-files/ukb_imp_chr{chr}_v3.pgen",
        overlap_snps="{root}/data/{dataset}/variants/{subdataset}/overlappingSNPs_chr{chr}.txt"
    output:
        "{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr_{contrasts}_{chr}.txt"
    resources:
        mem_mb=2000,
	walltime="00:03:00:00"
    params:
        gp_prefix = "/scratch/jgblanc/ukbb/plink2-files/ukb_imp_chr{chr}_v3",
        out_prefix = "{root}/output/calculate_FGr/{dataset}/{subdataset}/{contrasts}_{chr}"
    shell:
        """
        Rscript code/calculate_FGr/calc_FGr_chr.R {params.gp_prefix} {params.out_prefix} {input.r} {input.overlap_snps} {output}
        """

# Add together individal chromosomes LOCO

rule concat_chr_Tm:
    input:
        expand("{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr_{contrasts}_{chr}.txt", chr = CHR, root=ROOT, dataset = DATASET, contrasts=CONTRASTS, subdataset=SUBDATASET)
    output:
        "{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr-LOCO_{contrasts}_{chr}.txt"
    params:
        chrNum = lambda wildcards: get_chr_num(wildcards.chr),
        prefix_in = "{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr_{contrasts}"
    shell:
        """
        Rscript code/calculate_FGr/concat_FGr_LOCO.R {params.prefix_in} {params.chrNum} {output}
        """

## Run GWAS

rule assemble_fixed_covars:
    input:
        sex="{root}/data/phenotypes/genetic_sex_22001.txt",
        age="{root}/data/phenotypes/age_at_recruitment_21022.txt",
        batch="{root}/data/phenotypes/genotype_measurement_batch_22000.txt"
    output:
        "{root}/output/run_GWAS/covars/fixed.txt"
    shell:
        """
        Rscript code/run_GWAS/assemble_fixed_covar.R {input.sex} {input.age} {input.batch} {output}
        """


rule run_fastGWA:
    input:
        phenotype="{root}/data/phenotypes/StandingHeight_50.txt"
        sp="/scratch/jgblanc/ukbb/grm/sparseGRM.grm.sp",
        id="/scratch/jgblanc/ukbb/grm/sparseGRM.grm.id",
        covar="{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr-LOCO_{contrasts}_{chr}.txt",
        gp_genos="/scratch/jgblanc/ukbb/plink2-files/ukb_imp_chr{chr}_v3.pgen",
        overlap_snps="{root}/data/{dataset}/variants/{subdataset}/overlappingSNPs_chr{chr}.txt"
    output:
        "{root}/output/run_GWAS/{dataset}/{subdataset}/raw/{contrasts}_{chr}.fastGWA",
    params:
        prefix_out = "{root}/output/run_GWAS/{dataset}/{subdataset}/raw/{contrasts}_{chr}",
        prefix_grm = "/scratch/jgblanc/ukbb/grm/sparseGRM",
        prefix_plink = "/scratch/jgblanc/ukbb/plink2-files/ukb_imp_chr{chr}_v3"
    threads: 20
    shell:
        """
        ./bin/gcta64  --pheno {input.pheno} \
        --qcovar {input.covar} \
        --fastGWA-mlm --h2-limit 2.5 --maf 0 --geno 1 \
        --grm-sparse {params.prefix_grm} \
        --pfile {params.prefix_plink} \
        --threads {threads} \
        --out {params.prefix_out}
        """


# Snakefile to run full data analysis with any set of constrasts
CHR =[22]
#for i in range(1, 23):
#  CHR.append(str(i))
ROOT = ["/gpfs/data/berg-lab/jgblanc/stratification-data_analysis"]
DATASET = ["hgdp"]
SUBDATASET = ["EUR"]
TMP = [f.split(".")[0] for f in os.listdir("data/hgdp/r/EUR/") if f.endswith('_chr9.rvec')]
#CONTRASTS = [s.rstrip("_chr9") for s in TMP]
CONTRASTS = ["French-Sardinian"]


def get_chr_num(x):
  out = int(x)
  return out


rule all:
    input:
        expand("{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr-LOCO_{contrasts}_{chr}.txt", root=ROOT, chr=CHR, dataset = DATASET, subdataset=SUBDATASET, contrasts=CONTRASTS)


## Compute FGr

rule compute_FGr_chr:
    input:
        r="{root}/data/{dataset}/r/{subdataset}/{contrasts}_chr{chr}.rvec",
        gp_genos="/scratch/jgblanc/ukbb/plink2-files/ukb_imp_chr{chr}_v3.pgen",
        overlap_snps="{root}/data/{dataset}/variants/{subdataset}/overlappingSNPs_chr{chr}.txt"
    output:
        "{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr_{contrasts}_{chr}.txt"
    resources:
        mem_mb=2000,
	walltime="00:03:00:00"
    params:
        gp_prefix = "/scratch/jgblanc/ukbb/plink2-files/ukb_imp_chr{chr}_v3",
        out_prefix = "{root}/output/calculate_FGr/{dataset}/{subdataset}/{contrasts}_{chr}"
    shell:
        """
        Rscript code/calculate_FGr/calc_FGr_chr.R {params.gp_prefix} {params.out_prefix} {input.r} {input.overlap_snps} {output}
        """

# Add together individal chromosomes LOCO
rule concat_chr_Tm:
    input:
        expand("{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr_{contrasts}_{chr}.txt, chr = CHR, root=ROOT, dataset = DATASET, contrasts=CONSTRASTS, subdataset=SUBDATASET)
    output:
        "{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr-LOCO_{contrasts}_{chr}.txt"
    params:
        chrNum = lambda wildcards: get_chr_num(wildcards.rep)
        prefix_in = "{root}/output/calculate_FGr/{dataset}/{subdataset}/FGr_{contrasts}"
    shell:
        """
        Rscript code/calculate_FGr/concat_FGr_LOCO.R {params.prefix_in} {params.chrNum} {output}
        """



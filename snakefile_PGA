# Snakefile to run full data analysis with any set of constrasts
CHR =[]
for i in range(1, 23):
  CHR.append(str(i))
DATASET = ["pga_paper"]
NSNP = ["L-1000", "L-5000" ,"L-10000",L-50000, "L-100000","L-500000", "L-1000000"]
REP = ["A1"]
#for i in range(1,11):
#  REP.append("A"+str(i))
CONTRASTS = ["east", "north"]
#PC = [0, 10, 100]
COVAR = ["no-FGr", "FGr-LOCO"]
PHENOTYPE=[ "StandingHeight_50"]
#PHENOTYPE = [f.split(".")[0] for f in os.listdir("data/phenotypes/normalized/") if f.endswith('.txt')]
PVALUE_THRESHOLD = "1e-5"
#print(CONTRASTS)


wildcard_constraints:
    subdataset="t[0-9]*",
    gwas="g[0-9]*"


def get_chr_num(x):
  out = int(x)
  return out


rule all:
    input:
        expand("plots/pga_paper/error.txt",covar=COVAR, nsnp=NSNP, rep=REP, contrasts=CONTRASTS, chr=CHR, phenotype=PHENOTYPE),
	expand("plots/pga_paper/q.txt",covar=COVAR, nsnp=NSNP, rep=REP, contrasts=CONTRASTS, chr=CHR, phenotype=PHENOTYPE)


# Sample individuals for panels

rule get_ID_lists:
    input:
        sex="data/phenotypes/genetic_sex_22001.txt",
        batch="data/phenotypes/genotype_measurement_batch_22000.txt",
        north="data/phenotypes/PlaceOfBirthNorthCord_129.txt",
        east="data/phenotypes/PlaceOfBirthEastCord_130.txt",
        age="data/phenotypes/age_at_recruitment_21022.txt",
        genotyped="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr22_v3.psam",
        wbs="data/ukbb/WBS.ids",
        white="data/ukbb/nonWBS-White.ids",
        all = "data/ukbb/ALL.ids"
    output:
        gwas="data/pga_paper/{rep}/ids/gwas.ids",
        test="data/pga_paper/{rep}/ids/test.ids"
    params:
        gs_WBS=0,
        gs_Other = 50000,
        ts=100000
    shell:
        """
        Rscript code/PGA_paper/get_IDs_B.R {input.sex} {input.batch} {input.north} {input.east} {input.age} {input.genotyped} {output.gwas} {output.test} {params.gs_WBS} {params.gs_Other} {params.ts} {input.wbs} {input.white} {input.all}
        """

# Get overlapping SNPs

rule get_overlapping_snps:
    input:
        "data/ukbb/variants/White/ukb_imp_chr{chr}_v3.afreq"
    output:
        "data/pga_paper/variants/overlappingSNPs_chr{chr}.txt"
    shell:
        """
        cut -f2,3 {input} > {output}
        """

# Make birth coordinates test vector

rule get_TestVector:
    input:
        North="data/phenotypes/PlaceOfBirthNorthCord_129.txt",
        East = "data/phenotypes/PlaceOfBirthEastCord_130.txt",
        ids="data/pga_paper/{rep}/ids/test.ids"
    output:
        north = "data/pga_paper/{rep}/TestVecs/north.txt",
        east = "data/pga_paper/{rep}/TestVecs/east.txt"
    shell:
        """
        Rscript code/PGA_paper/get_Tvec.R {input.North} {input.East} {input.ids} {output.north} {output.east}
        """

# Compute genotype contrasts

rule compute_r:
    input:
        Tvec="data/pga_paper/{rep}/TestVecs/{contrasts}.txt",
        IDs="data/pga_paper/{rep}/ids/test.ids",
        snps="data/pga_paper/variants/overlappingSNPs_chr{chr}.txt"
    output:
        "data/pga_paper/{rep}/r/{contrasts}_chr{chr}.rvec"
    resources:
        mem_mb=50000,
	time="03:00:00"
    threads: 1
    params:
        prefix_tp = "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
        prefix_out = "data/pga_paper/{rep}/r/{chr}-{contrasts}"
    shell:
        """
        Rscript code/PGA_paper/compute_r.R {params.prefix_tp} {input.Tvec} {params.prefix_out} {input.snps} {output} {input.IDs}
        rm {params.prefix_out}xt_temp.*
        """

# Downsample SNPs for correction

rule prune_SNPs:
    input:
        gp_genos="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen",
        IDs="data/pga_paper/{rep}/ids/gwas.ids",
        snps="data/pga_paper/variants/overlappingSNPs_chr{chr}.txt"
    output:
        "data/pga_paper/{rep}/pruned_snps/{chr}.prune.in"
    params:
        prefix_plink = "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
        prefix_out = "data/pga_paper/{rep}/pruned_snps/{chr}"
    shell:
        """
        plink2 --pfile {params.prefix_plink} \
        --keep {input.IDs} \
        --extract {input.snps} \
        --indep-pairwise 100kb 0.8 \
        --out {params.prefix_out}
        """

rule downsample_snps:
    input:
        expand("data/pga_paper/{{rep}}/pruned_snps/{chr}.prune.in", chr = CHR, newline="\n")
    output:
        all = "data/pga_paper/{rep}/pruned_snps/{nsnp}/all.in",
        sample = "data/pga_paper/{rep}/{nsnp}/all_snps.txt"
    shell:
        """
        Rscript code/PGA_paper/sample_snps.R {output.all} {output.sample} {wildcards.nsnp} {input}
        """

# Compute FGr

rule compute_FGr_chr:
  input:
      r="data/pga_paper/{rep}/r/{contrasts}_chr{chr}.rvec",
      gp_genos="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen",
      overlap_snps="data/pga_paper/{rep}/{nsnp}/all_snps.txt",
      IDs="data/pga_paper/{rep}/ids/gwas.ids"
  output:
      "output/calculate_FGr/pga_paper/{rep}/{nsnp}/FGr_{contrasts}_{chr}.txt"
  resources:
      mem_mb=100000,
      time="03:00:00"
  threads: 16
  params:
      gp_prefix = "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
      out_prefix = "output/calculate_FGr/pga_paper/{rep}/{nsnp}/{contrasts}_{chr}"
  shell:
      """
      Rscript code/calculate_FGr/calc_FGr_chr.R {params.gp_prefix} {params.out_prefix} {input.r} {input.overlap_snps} {output} {input.IDs}
      """

rule concat_chr_FGr:
    input:
        expand("output/calculate_FGr/pga_paper/{{rep}}/{{nsnp}}/FGr_{{contrasts}}_{chr}.txt", chr = CHR)
    output:
        "output/calculate_FGr/pga_paper/{rep}/{nsnp}/FGr-LOCO_{contrasts}_{chr}.txt"
    params:
        chrNum = lambda wildcards: get_chr_num(wildcards.chr),
        prefix_in = "output/calculate_FGr/pga_paper/{rep}/{nsnp}/FGr_{contrasts}"
    shell:
        """
        Rscript code/calculate_FGr/concat_FGr_LOCO.R {params.prefix_in} {params.chrNum} {output}
        """

# Estimate FGr Error

rule compute_FGr_error:
    input:
        expand("output/calculate_FGr/pga_paper/{{rep}}/{{nsnp}}/FGr_{{contrasts}}_{chr}.txt", chr = CHR)
    output:
      "output/calculate_FGr/pga_paper/{rep}/{nsnp}/Var_{contrasts}.txt"
    params:
      prefix_in = "output/calculate_FGr/pga_paper/{rep}/{nsnp}/FGr_{contrasts}"
    shell:
      """
      Rscript code/calculate_FGr/compute_error_jacknife.R {params.prefix_in} {output}
      """

# Assemble covariates

rule assemble_fixed_covars:
    input:
      sex="data/phenotypes/genetic_sex_22001.txt",
      batch="data/phenotypes/genotype_measurement_batch_22000.txt"
    output:
      "output/run_gwas/fixed_covars.txt"
    shell:
      """
      Rscript code/run_gwas/assemble_fixed_covar.R {input.sex} {input.batch} {output}
      """

rule assemble_quant_covars_FGr:
    input:
      age="data/phenotypes/age_at_recruitment_21022.txt",
      covar="output/calculate_FGr/pga_paper/{rep}/{nsnp}/FGr-LOCO_{contrasts}_{chr}.txt"
    output:
      "output/run_gwas/pga_paper/{rep}/{nsnp}/covariates/FGr-LOCO_{contrasts}_{chr}.txt"
    shell:
      """
      Rscript code/PGA_paper/assemble_quant_covar.R {input.age} {input.covar} {output}
      """

rule assemble_quant_covars_control:
    input:
        age="data/phenotypes/age_at_recruitment_21022.txt"
    output:
        "output/run_gwas/pga_paper/{rep}/{nsnp}/covariates/no-FGr_{contrasts}_{chr}.txt"
    shell:
        """
        Rscript code/PGA_paper/assemble_quant_covar_control.R {input.age} {output}
        """

# Run GWAS

rule run_fastGWA:
    input:
      pheno="data/phenotypes/{phenotype}.txt",
      qcovar="output/run_gwas/pga_paper/{rep}/{nsnp}/covariates/{covar}_{contrasts}_{chr}.txt",
      gp_genos="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen",
      overlap_snps="data/pga_paper/variants/overlappingSNPs_chr{chr}.txt",
      covar="output/run_gwas/fixed_covars.txt",
      IDs="data/pga_paper/{rep}/ids/gwas.ids"
    output:
      "/scratch/jgblanc/stratification-data_analysis/output/run_gwas/pga_paper/{rep}/{nsnp}/{phenotype}/raw_LR/{covar}_{contrasts}_{chr}.fastGWA",
    params:
        prefix_out = "/scratch/jgblanc/stratification-data_analysis/output/run_gwas/pga_paper/{rep}/{nsnp}/{phenotype}/raw_LR/{covar}_{contrasts}_{chr}",
        prefix_plink = "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3"
    threads: 16
    resources:
        mem_mb=100,
        time="00:30:00"
    shell:
        """
        gcta  --pheno {input.pheno} \
        --keep {input.IDs} \
        --qcovar {input.qcovar} \
        --covar {input.covar} \
        --extract {input.overlap_snps} \
        --fastGWA-lr \
        --threads {threads} \
        --pfile {params.prefix_plink} \
        --out {params.prefix_out}
        """

# Pick minimum p-value per block

rule assign_snps_to_blocks:
    input:
        ldBlocks="data/LD_blocks/fourier_ls-all_parsed.bed",
        ss="/scratch/jgblanc/stratification-data_analysis/output/run_gwas/pga_paper/{rep}/{nsnp}/{phenotype}/raw_LR/{covar}_{contrasts}_{chr}.fastGWA",
        r="data/pga_paper/{rep}/r/{contrasts}_chr{chr}.rvec",
    output:
        betas="/scratch/jgblanc/stratification-data_analysis/output/pga_test/pga_paper/{rep}/{nsnp}/{phenotype}/formated_ss_LR/{covar}_{contrasts}_{chr}.betas"
    params:
        pt = PVALUE_THRESHOLD
    shell:
        """
        Rscript code/pga_test/assign_snps_to_blocks_LR.R {input.ldBlocks} {input.ss} {input.r} {output.betas} {params.pt}
        rm {input.ss}
        """

rule concat_snps:
    input:
        expand("/scratch/jgblanc/stratification-data_analysis/output/pga_test/pga_paper/{{rep}}/{{nsnp}}/{{phenotype}}/formated_ss_LR/{{covar}}_{{contrasts}}_{chr}.betas", chr=CHR)
    output:
        "output/pga_test/pga_paper/{rep}/{nsnp}/{phenotype}/formated_ss_LR/{covar}_{contrasts}.all.betas"
    shell:
        """
        cat {input} > {output}
        rm {input}
        """

# Calculate q

rule pga_test:
    input:
        "output/pga_test/pga_paper/{rep}/{nsnp}/{phenotype}/formated_ss_LR/{covar}_{contrasts}.all.betas"
    output:
        results="output/pga_test/pga_paper/{rep}/{nsnp}/{phenotype}/results_LR/{covar}_{contrasts}.all.results"
    shell:
        """
        Rscript code/PGA_paper/run_test_jacknife_LR.R {input} {output.results}
        """

# Concat error

rule concat_FGr_error:
    input:
        expand("output/calculate_FGr/pga_paper/{rep}/{nsnp}/Var_{contrasts}.txt", rep = REP, nsnp = NSNP, contrasts=CONTRASTS, covar=COVAR)
    output:
        "plots/pga_paper/error.txt"
    shell:
        """
        Rscript code/PGA_paper/concat_error.R {output} {input}
        """

# Concat error

rule concat_q:
    input:
        expand("output/pga_test/pga_paper/{rep}/{nsnp}/{phenotype}/results_LR/{covar}_{contrasts}.all.results",covar=COVAR, rep = REP, nsnp = NSNP,phenotype=PHENOTYPE, contrasts=CONTRASTS)
    output:
        "plots/pga_paper/q.txt"
    shell:
        """
        Rscript code/PGA_paper/concat_q.R {output} {input}
        """
